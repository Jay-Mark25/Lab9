{"ast":null,"code":"var _jsxFileName = \"D:\\\\Application Development\\\\FINALS\\\\Lab9\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport lowScoreSound from './sounds/low-score.mp3';\nimport backgroundVideo from './videos/background.mp4';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst quizData = [{\n  question: 'What is the capital of France?',\n  options: ['Berlin', 'Madrid', 'Paris', 'Rome'],\n  correctAnswer: 'Paris'\n}, {\n  question: 'What is the largest planet in our solar system?',\n  options: ['Earth', 'Mars', 'Jupiter', 'Saturn'],\n  correctAnswer: 'Jupiter'\n}, {\n  question: 'What is the chemical symbol for water?',\n  options: ['H2O', 'O2', 'CO2', 'NaCl'],\n  correctAnswer: 'H2O'\n}];\nfunction App() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [score, setScore] = useState(0);\n  const handleAnswerClick = selectedAnswer => {\n    if (selectedAnswer === quizData[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    if (currentQuestion < quizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      // Check the score and play the low-score sound if necessary\n      if (score + (selectedAnswer === quizData[currentQuestion].correctAnswer ? 1 : 0) <= 2) {\n        const lowScoreAudio = new Audio(lowScoreSound);\n        lowScoreAudio.play();\n      }\n      setShowResult(true);\n    }\n  };\n  const restartQuiz = () => {\n    setCurrentQuestion(0);\n    setShowResult(false);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      className: \"background-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: backgroundVideo,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"quiz-app-head\",\n        children: \"Quiz App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), showResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", score, \" out of \", quizData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartQuiz,\n          children: \"Restart Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: quizData[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: quizData[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"option\",\n            onClick: () => handleAnswerClick(option),\n            onKeyPress: e => e.key === 'Enter' && handleAnswerClick(option),\n            children: option\n          }, `${quizData[currentQuestion].question}-${option}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"8SLp5bgqIin8X9zz/1S9QMxtjYE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","lowScoreSound","backgroundVideo","jsxDEV","_jsxDEV","Fragment","_Fragment","quizData","question","options","correctAnswer","App","_s","currentQuestion","setCurrentQuestion","showResult","setShowResult","score","setScore","handleAnswerClick","selectedAnswer","length","lowScoreAudio","Audio","play","restartQuiz","className","children","autoPlay","loop","muted","src","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","option","index","onKeyPress","e","key","_c","$RefreshReg$"],"sources":["D:/Application Development/FINALS/Lab9/quiz-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport lowScoreSound from './sounds/low-score.mp3';\nimport backgroundVideo from './videos/background.mp4';\n\nconst quizData = [\n    { question: 'What is the capital of France?', options: ['Berlin', 'Madrid', 'Paris', 'Rome'], correctAnswer: 'Paris' },\n    { question: 'What is the largest planet in our solar system?', options: ['Earth', 'Mars', 'Jupiter', 'Saturn'], correctAnswer: 'Jupiter' },\n    { question: 'What is the chemical symbol for water?', options: ['H2O', 'O2', 'CO2', 'NaCl'], correctAnswer: 'H2O' }\n];\n\nfunction App() {\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [showResult, setShowResult] = useState(false);\n    const [score, setScore] = useState(0);\n\n    const handleAnswerClick = (selectedAnswer) => {\n        if (selectedAnswer === quizData[currentQuestion].correctAnswer) {\n            setScore(score + 1);\n        }\n        if (currentQuestion < quizData.length - 1) {\n            setCurrentQuestion(currentQuestion + 1);\n        } else {\n            // Check the score and play the low-score sound if necessary\n            if (score + (selectedAnswer === quizData[currentQuestion].correctAnswer ? 1 : 0) <= 2) {\n                const lowScoreAudio = new Audio(lowScoreSound);\n                lowScoreAudio.play();\n            }\n            setShowResult(true);\n        }\n    };\n\n    const restartQuiz = () => {\n        setCurrentQuestion(0);\n        setShowResult(false);\n        setScore(0);\n    };\n\n    return (\n        <div className=\"app\">\n            <video autoPlay loop muted className=\"background-video\">\n                <source src={backgroundVideo} type=\"video/mp4\" />\n                Your browser does not support the video tag.\n            </video>\n            <div className=\"container\">\n                <h1 className='quiz-app-head'>Quiz App</h1>\n                {showResult ? (\n                    <div className=\"result\">\n                        <p>Your score: {score} out of {quizData.length}</p>\n                        <button onClick={restartQuiz}>Restart Quiz</button>\n                    </div>\n                ) : (\n                    <>\n                        <div className=\"question\">\n                            <p>{quizData[currentQuestion].question}</p>\n                        </div>\n                        <div className=\"options\">\n                            {quizData[currentQuestion].options.map((option, index) => (\n                                <button \n                                    key={`${quizData[currentQuestion].question}-${option}`} \n                                    className=\"option\" \n                                    onClick={() => handleAnswerClick(option)} \n                                    onKeyPress={(e) => e.key === 'Enter' && handleAnswerClick(option)}\n                                >\n                                    {option}\n                                </button>\n                            ))}\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n        \n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}